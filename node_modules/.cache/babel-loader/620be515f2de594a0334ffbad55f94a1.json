{"ast":null,"code":"var _jsxFileName = \"/Users/ariannapavan/Desktop/React/simone-food/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = props => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMealHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://order-food-app-25b86-default-rtdb.firebaseio.com/meals.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      const data = await response.json();\n      console.log(data);\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMealHandler();\n  }, []);\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no Movies :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 17\n  }, this);\n\n  if (meals.length > 0) {\n    content = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n      id: meal.id,\n      name: meal.name,\n      description: meal.description,\n      price: meal.price\n    }, meal.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this));\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"iy9YelWPw2TYk+s1Cj/6QTGrG+0=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/ariannapavan/Desktop/React/simone-food/src/components/Meals/AvailableMeals.js"],"names":["React","useState","useEffect","useCallback","Card","MealItem","classes","AvailableMeals","props","meals","setMeals","isLoading","setIsLoading","error","setError","fetchMealHandler","response","fetch","ok","Error","data","json","console","log","loadedMeals","key","push","id","name","description","price","message","content","length","map","meal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\n\nconst AvailableMeals = (props) => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMealHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\n        \"https://order-food-app-25b86-default-rtdb.firebaseio.com/meals.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n      const data = await response.json();\n      console.log(data);\n      const loadedMeals = [];\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price,\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMealHandler();\n  }, []);\n\n  let content = <p>Found no Movies :(</p>;\n\n  if (meals.length > 0) {\n    content = meals.map((meal) => (\n      <MealItem\n        id={meal.id}\n        key={meal.id}\n        name={meal.name}\n        description={meal.description}\n        price={meal.price}\n      />\n    ));\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{content}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}