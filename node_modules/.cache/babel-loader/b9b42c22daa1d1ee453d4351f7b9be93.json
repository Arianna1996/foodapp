{"ast":null,"code":"var _jsxFileName = \"/Users/ariannapavan/Desktop/React/webapp-food/src/components/Cart/FormOrder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport classes from \"./FormOrder.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormOrder = props => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [nameIsValid, setNameIsValid] = useState(null);\n  const [address, setAddress] = useState(\"\");\n  const [addressIsValid, setAddressIsValid] = useState(null);\n  const [city, setCity] = useState(\"\");\n  const [cityIsValid, setCityIsValid] = useState(null);\n  const [zip, setZip] = useState(\"\");\n  const [zipIsValid, setZipIsValid] = useState(null);\n  const [message, setMessage] = useState(\"\");\n\n  const nameHandler = e => {\n    setName(e.target.value);\n\n    if (e.target.value.trim().length > 0) {\n      setNameIsValid(true);\n    } else {\n      setNameIsValid(false);\n    }\n  };\n\n  const addressHandler = e => {\n    setAddress(e.target.value);\n\n    if (e.target.value.trim().length > 0) {\n      setAddressIsValid(true);\n    } else {\n      setAddressIsValid(false);\n    }\n  };\n\n  const zipHandler = e => {\n    setZip(e.target.value);\n\n    if (e.target.value.trim().length > 0) {\n      setZipIsValid(true);\n    } else {\n      setZipIsValid(false);\n    }\n  };\n\n  const cityHandler = e => {\n    setCity(e.target.value);\n\n    if (e.target.value.trim().length > 0) {\n      setCityIsValid(true);\n    } else {\n      setCityIsValid(false);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (nameIsValid && addressIsValid && zipIsValid && cityIsValid) {\n      console.log(error);\n      var orderInfo = {\n        name: name,\n        address: address,\n        city: city,\n        zip: zip\n      };\n      console.log(orderInfo);\n      props.onAddMeal(orderInfo);\n      setName(\"\");\n      setAddress(\"\");\n      setCity(\"\");\n      setZip(\"\");\n      setMessage(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: classes.titleForm,\n      children: \"Insert you info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.message,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.formOrder,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name...\",\n        onChange: nameHandler,\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Insert a valid name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Address...\",\n        onChange: addressHandler,\n        value: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Insert a valid address \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"City...\",\n        onChange: cityHandler,\n        value: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Insert a valid city \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"ZIP Code...\",\n        onChange: zipHandler,\n        value: zip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Insert a valid zip code \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.buttonOrderContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.buttonCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: classes.buttonForm,\n          children: \"Complete order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FormOrder, \"llxKfw2qclP1zBxdjYO8XbPRkhw=\");\n\n_c = FormOrder;\nexport default FormOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormOrder\");","map":{"version":3,"sources":["/Users/ariannapavan/Desktop/React/webapp-food/src/components/Cart/FormOrder.js"],"names":["React","useRef","useState","classes","FormOrder","props","name","setName","nameIsValid","setNameIsValid","address","setAddress","addressIsValid","setAddressIsValid","city","setCity","cityIsValid","setCityIsValid","zip","setZip","zipIsValid","setZipIsValid","message","setMessage","nameHandler","e","target","value","trim","length","addressHandler","zipHandler","cityHandler","submitHandler","preventDefault","console","log","error","orderInfo","onAddMeal","titleForm","formOrder","buttonOrderContainer","buttonCancel","buttonForm"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport classes from \"./FormOrder.module.css\";\n\nconst FormOrder = (props) => {\n  const [name, setName] = useState(\"\");\n  const [nameIsValid, setNameIsValid] = useState(null);\n  const [address, setAddress] = useState(\"\");\n  const [addressIsValid, setAddressIsValid] = useState(null);\n  const [city, setCity] = useState(\"\");\n  const [cityIsValid, setCityIsValid] = useState(null);\n  const [zip, setZip] = useState(\"\");\n  const [zipIsValid, setZipIsValid] = useState(null);\n  const [message, setMessage] = useState(\"\");\n\n  const nameHandler = (e) => {\n    setName(e.target.value);\n    if (e.target.value.trim().length > 0) {\n      setNameIsValid(true);\n    } else {\n      setNameIsValid(false);\n    }\n  };\n  const addressHandler = (e) => {\n    setAddress(e.target.value);\n    if (e.target.value.trim().length > 0) {\n      setAddressIsValid(true);\n    } else {\n      setAddressIsValid(false);\n    }\n  };\n\n  const zipHandler = (e) => {\n    setZip(e.target.value);\n    if (e.target.value.trim().length > 0) {\n      setZipIsValid(true);\n    } else {\n      setZipIsValid(false);\n    }\n  };\n\n  const cityHandler = (e) => {\n    setCity(e.target.value);\n    if (e.target.value.trim().length > 0) {\n      setCityIsValid(true);\n    } else {\n      setCityIsValid(false);\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (nameIsValid && addressIsValid && zipIsValid && cityIsValid) {\n      console.log(error);\n      var orderInfo = {\n        name: name,\n        address: address,\n        city: city,\n        zip: zip,\n      };\n      console.log(orderInfo);\n      props.onAddMeal(orderInfo);\n      setName(\"\");\n      setAddress(\"\");\n      setCity(\"\");\n      setZip(\"\");\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <>\n      <h2 className={classes.titleForm}>Insert you info</h2>\n      <div className={classes.message}>{message}</div>\n      <form className={classes.formOrder} onSubmit={submitHandler}>\n        <input\n          type=\"text\"\n          placeholder=\"Name...\"\n          onChange={nameHandler}\n          value={name}\n        ></input>\n        <p> Insert a valid name </p>\n\n        <input\n          type=\"text\"\n          placeholder=\"Address...\"\n          onChange={addressHandler}\n          value={address}\n        ></input>\n        <p> Insert a valid address </p>\n\n        <input\n          type=\"text\"\n          placeholder=\"City...\"\n          onChange={cityHandler}\n          value={city}\n        ></input>\n        <p> Insert a valid city </p>\n\n        <input\n          type=\"text\"\n          placeholder=\"ZIP Code...\"\n          onChange={zipHandler}\n          value={zip}\n        ></input>\n        <p> Insert a valid zip code </p>\n\n        <div className={classes.buttonOrderContainer}>\n          <button className={classes.buttonCancel}>Cancel</button>\n          <button type=\"submit\" className={classes.buttonForm}>\n            Complete order\n          </button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default FormOrder;\n"]},"metadata":{},"sourceType":"module"}